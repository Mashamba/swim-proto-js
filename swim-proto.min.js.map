{"version":3,"sources":["node_modules/browser-pack/_prelude.js","config.json","swim-proto.min.js","swim-proto.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","swim","proto","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"version","swim-proto-js","decode","record","recon","tag","EventMessage","CommandMessage","LinkRequest","LinkedResponse","SyncRequest","SyncedResponse","UnlinkRequest","UnlinkedResponse","AuthRequest","AuthedResponse","DeauthRequest","DeauthedResponse","encode","envelope","parse","string","stringify","Envelope","RequestEnvelope","ResponseEnvelope","MessageEnvelope","node","lane","body","prio","config","Object","defineProperty","prototype","value","create","constructor","withAddress","undefined","headers","concat","@event","tail","head","header","@command","push","@link","@linked","@sync","@synced","@unlink","@unlinked","@auth","@authed","@deauth","@deauthed","./config.json","recon-js"],"mappings":"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","file":"swim-proto.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports={\"version\":\"0.4.1\"}","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}(g.swim || (g.swim = {})).proto = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports={\"version\":\"0.4.1\"}\n},{}],\"swim-proto-js\":[function(require,module,exports){\n'use strict';\n\nvar config = require('./config.json');\nvar recon = require('recon-js');\n\nfunction decode(record) {\n  switch (recon.tag(record)) {\n    case '@event': return EventMessage.decode(record);\n    case '@command': return CommandMessage.decode(record);\n    case '@link': return LinkRequest.decode(record);\n    case '@linked': return LinkedResponse.decode(record);\n    case '@sync': return SyncRequest.decode(record);\n    case '@synced': return SyncedResponse.decode(record);\n    case '@unlink': return UnlinkRequest.decode(record);\n    case '@unlinked': return UnlinkedResponse.decode(record);\n    case '@auth': return AuthRequest.decode(record);\n    case '@authed': return AuthedResponse.decode(record);\n    case '@deauth': return DeauthRequest.decode(record);\n    case '@deauthed': return DeauthedResponse.decode(record);\n  }\n}\n\nfunction encode(envelope) {\n  return envelope.encode();\n}\n\nfunction parse(string) {\n  return decode(recon.parse(string));\n}\n\nfunction stringify(envelope) {\n  return recon.stringify(encode(envelope));\n}\n\n\nfunction Envelope() {}\nObject.defineProperty(Envelope.prototype, 'isRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isMessage', {value: false});\nObject.defineProperty(Envelope.prototype, 'isEventMessage', {value: false});\nObject.defineProperty(Envelope.prototype, 'isCommandMessage', {value: false});\nObject.defineProperty(Envelope.prototype, 'isLinkRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isLinkedResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isSyncRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isSyncedResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isUnlinkRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isUnlinkedResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isAuthRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isAuthedResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isDeauthRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isDeauthedResponse', {value: false});\n\n\nfunction RequestEnvelope() {\n  Envelope.call(this);\n}\nRequestEnvelope.prototype = Object.create(Envelope.prototype);\nRequestEnvelope.prototype.constructor = RequestEnvelope;\nObject.defineProperty(RequestEnvelope.prototype, 'isRequest', {value: true});\n\n\nfunction ResponseEnvelope() {\n  Envelope.call(this);\n}\nResponseEnvelope.prototype = Object.create(Envelope.prototype);\nResponseEnvelope.prototype.constructor = ResponseEnvelope;\nObject.defineProperty(ResponseEnvelope.prototype, 'isResponse', {value: true});\n\n\nfunction MessageEnvelope() {\n  Envelope.call(this);\n}\nMessageEnvelope.prototype = Object.create(Envelope.prototype);\nMessageEnvelope.prototype.constructor = MessageEnvelope;\nObject.defineProperty(MessageEnvelope.prototype, 'isMessage', {value: true});\n\n\nfunction EventMessage(node, lane, body) {\n  MessageEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.body = body;\n}\nEventMessage.prototype = Object.create(MessageEnvelope.prototype);\nEventMessage.prototype.constructor = EventMessage;\nObject.defineProperty(EventMessage.prototype, 'isEventMessage', {value: true});\nEventMessage.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new EventMessage(node, lane, this.body);\n};\nEventMessage.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon.concat({'@event': headers}, this.body);\n};\nEventMessage.decode = function (record) {\n  var node, lane;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new EventMessage(node, lane, body);\n  }\n};\n\n\nfunction CommandMessage(node, lane, body) {\n  MessageEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.body = body;\n}\nCommandMessage.prototype = Object.create(MessageEnvelope.prototype);\nCommandMessage.prototype.constructor = CommandMessage;\nObject.defineProperty(CommandMessage.prototype, 'isCommandMessage', {value: true});\nCommandMessage.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new CommandMessage(node, lane, this.body);\n};\nCommandMessage.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon.concat({'@command': headers}, this.body);\n};\nCommandMessage.decode = function (record) {\n  var node, lane;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new CommandMessage(node, lane, body);\n  }\n};\n\n\nfunction LinkRequest(node, lane, prio, body) {\n  RequestEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.prio = prio || 0.0;\n  this.body = body;\n}\nLinkRequest.prototype = Object.create(RequestEnvelope.prototype);\nLinkRequest.prototype.constructor = LinkRequest;\nObject.defineProperty(LinkRequest.prototype, 'isLinkRequest', {value: true});\nLinkRequest.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new LinkRequest(node, lane, this.prio, this.body);\n};\nLinkRequest.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.prio) headers.push({prio: this.prio});\n  return recon.concat({'@link': headers}, this.body);\n};\nLinkRequest.decode = function (record) {\n  var node, lane, prio;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.prio !== undefined) prio = header.prio;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new LinkRequest(node, lane, prio, body);\n  }\n};\n\n\nfunction LinkedResponse(node, lane, prio, body) {\n  ResponseEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.prio = prio || 0.0;\n  this.body = body;\n}\nLinkedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nLinkedResponse.prototype.constructor = LinkedResponse;\nObject.defineProperty(LinkedResponse.prototype, 'isLinkedResponse', {value: true});\nLinkedResponse.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new LinkedResponse(node, lane, this.prio, this.body);\n};\nLinkedResponse.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.prio) headers.push({prio: this.prio});\n  return recon.concat({'@linked': headers}, this.body);\n};\nLinkedResponse.decode = function (record) {\n  var node, lane, prio;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.prio !== undefined) prio = header.prio;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new LinkedResponse(node, lane, prio, body);\n  }\n};\n\n\nfunction SyncRequest(node, lane, prio, body) {\n  RequestEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.prio = prio || 0.0;\n  this.body = body;\n}\nSyncRequest.prototype = Object.create(RequestEnvelope.prototype);\nSyncRequest.prototype.constructor = SyncRequest;\nObject.defineProperty(SyncRequest.prototype, 'isSyncRequest', {value: true});\nSyncRequest.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new SyncRequest(node, lane, this.prio, this.body);\n};\nSyncRequest.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.prio) headers.push({prio: this.prio});\n  return recon.concat({'@sync': headers}, this.body);\n};\nSyncRequest.decode = function (record) {\n  var node, lane, prio;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.prio !== undefined) prio = header.prio;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new SyncRequest(node, lane, prio, body);\n  }\n};\n\n\nfunction SyncedResponse(node, lane, body) {\n  ResponseEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.body = body;\n}\nSyncedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nSyncedResponse.prototype.constructor = SyncedResponse;\nObject.defineProperty(SyncedResponse.prototype, 'isSyncedResponse', {value: true});\nSyncedResponse.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new SyncedResponse(node, lane, this.body);\n};\nSyncedResponse.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon.concat({'@synced': headers}, this.body);\n};\nSyncedResponse.decode = function (record) {\n  var node, lane;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new SyncedResponse(node, lane, body);\n  }\n};\n\n\nfunction UnlinkRequest(node, lane, body) {\n  RequestEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.body = body;\n}\nUnlinkRequest.prototype = Object.create(RequestEnvelope.prototype);\nUnlinkRequest.prototype.constructor = UnlinkRequest;\nObject.defineProperty(UnlinkRequest.prototype, 'isUnlinkRequest', {value: true});\nUnlinkRequest.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new UnlinkRequest(node, lane, this.body);\n};\nUnlinkRequest.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon.concat({'@unlink': headers}, this.body);\n};\nUnlinkRequest.decode = function (record) {\n  var node, lane;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new UnlinkRequest(node, lane, body);\n  }\n};\n\n\nfunction UnlinkedResponse(node, lane, body) {\n  ResponseEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.body = body;\n}\nUnlinkedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nUnlinkedResponse.prototype.constructor = UnlinkedResponse;\nObject.defineProperty(UnlinkedResponse.prototype, 'isUnlinkedResponse', {value: true});\nUnlinkedResponse.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new UnlinkedResponse(node, lane, this.body);\n};\nUnlinkedResponse.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon.concat({'@unlinked': headers}, this.body);\n};\nUnlinkedResponse.decode = function (record) {\n  var node, lane;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new UnlinkedResponse(node, lane, body);\n  }\n};\n\n\nfunction AuthRequest(body) {\n  RequestEnvelope.call(this);\n  this.body = body;\n}\nAuthRequest.prototype = Object.create(RequestEnvelope.prototype);\nAuthRequest.prototype.constructor = AuthRequest;\nObject.defineProperty(AuthRequest.prototype, 'isAuthRequest', {value: true});\nAuthRequest.prototype.encode = function () {\n  return recon.concat({'@auth': null}, this.body);\n};\nAuthRequest.decode = function (record) {\n  var body = recon.tail(record);\n  return new AuthRequest(body);\n};\n\n\nfunction AuthedResponse(body) {\n  ResponseEnvelope.call(this);\n  this.body = body;\n}\nAuthedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nAuthedResponse.prototype.constructor = AuthedResponse;\nObject.defineProperty(AuthedResponse.prototype, 'isAuthedResponse', {value: true});\nAuthedResponse.prototype.encode = function () {\n  return recon.concat({'@authed': null}, this.body);\n};\nAuthedResponse.decode = function (record) {\n  var body = recon.tail(record);\n  return new AuthedResponse(body);\n};\n\n\nfunction DeauthRequest(body) {\n  RequestEnvelope.call(this);\n  this.body = body;\n}\nDeauthRequest.prototype = Object.create(RequestEnvelope.prototype);\nDeauthRequest.prototype.constructor = DeauthRequest;\nObject.defineProperty(DeauthRequest.prototype, 'isDeauthRequest', {value: true});\nDeauthRequest.prototype.encode = function () {\n  return recon.concat({'@deauth': null}, this.body);\n};\nDeauthRequest.decode = function (record) {\n  var body = recon.tail(record);\n  return new DeauthRequest(body);\n};\n\n\nfunction DeauthedResponse(body) {\n  ResponseEnvelope.call(this);\n  this.body = body;\n}\nDeauthedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nDeauthedResponse.prototype.constructor = DeauthedResponse;\nObject.defineProperty(DeauthedResponse.prototype, 'isDeauthedResponse', {value: true});\nDeauthedResponse.prototype.encode = function () {\n  return recon.concat({'@deauthed': null}, this.body);\n};\nDeauthedResponse.decode = function (record) {\n  var body = recon.tail(record);\n  return new DeauthedResponse(body);\n};\n\n\nexports.decode = decode;\nexports.encode = encode;\nexports.parse = parse;\nexports.stringify = stringify;\nexports.Envelope = Envelope;\nexports.RequestEnvelope = RequestEnvelope;\nexports.ResponseEnvelope = ResponseEnvelope;\nexports.MessageEnvelope = MessageEnvelope;\nexports.EventMessage = EventMessage;\nexports.CommandMessage = CommandMessage;\nexports.SyncRequest = SyncRequest;\nexports.SyncedResponse = SyncedResponse;\nexports.LinkRequest = LinkRequest;\nexports.LinkedResponse = LinkedResponse;\nexports.UnlinkRequest = UnlinkRequest;\nexports.UnlinkedResponse = UnlinkedResponse;\nexports.AuthRequest = AuthRequest;\nexports.AuthedResponse = AuthedResponse;\nexports.DeauthRequest = DeauthRequest;\nexports.DeauthedResponse = DeauthedResponse;\nexports.config = config;\n\n},{\"./config.json\":1,\"recon-js\":\"recon-js\"}]},{},[])(\"swim-proto-js\")\n});\n\n","'use strict';\n\nvar config = require('./config.json');\nvar recon = require('recon-js');\n\nfunction decode(record) {\n  switch (recon.tag(record)) {\n    case '@event': return EventMessage.decode(record);\n    case '@command': return CommandMessage.decode(record);\n    case '@link': return LinkRequest.decode(record);\n    case '@linked': return LinkedResponse.decode(record);\n    case '@sync': return SyncRequest.decode(record);\n    case '@synced': return SyncedResponse.decode(record);\n    case '@unlink': return UnlinkRequest.decode(record);\n    case '@unlinked': return UnlinkedResponse.decode(record);\n    case '@auth': return AuthRequest.decode(record);\n    case '@authed': return AuthedResponse.decode(record);\n    case '@deauth': return DeauthRequest.decode(record);\n    case '@deauthed': return DeauthedResponse.decode(record);\n  }\n}\n\nfunction encode(envelope) {\n  return envelope.encode();\n}\n\nfunction parse(string) {\n  return decode(recon.parse(string));\n}\n\nfunction stringify(envelope) {\n  return recon.stringify(encode(envelope));\n}\n\n\nfunction Envelope() {}\nObject.defineProperty(Envelope.prototype, 'isRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isMessage', {value: false});\nObject.defineProperty(Envelope.prototype, 'isEventMessage', {value: false});\nObject.defineProperty(Envelope.prototype, 'isCommandMessage', {value: false});\nObject.defineProperty(Envelope.prototype, 'isLinkRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isLinkedResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isSyncRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isSyncedResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isUnlinkRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isUnlinkedResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isAuthRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isAuthedResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isDeauthRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isDeauthedResponse', {value: false});\n\n\nfunction RequestEnvelope() {\n  Envelope.call(this);\n}\nRequestEnvelope.prototype = Object.create(Envelope.prototype);\nRequestEnvelope.prototype.constructor = RequestEnvelope;\nObject.defineProperty(RequestEnvelope.prototype, 'isRequest', {value: true});\n\n\nfunction ResponseEnvelope() {\n  Envelope.call(this);\n}\nResponseEnvelope.prototype = Object.create(Envelope.prototype);\nResponseEnvelope.prototype.constructor = ResponseEnvelope;\nObject.defineProperty(ResponseEnvelope.prototype, 'isResponse', {value: true});\n\n\nfunction MessageEnvelope() {\n  Envelope.call(this);\n}\nMessageEnvelope.prototype = Object.create(Envelope.prototype);\nMessageEnvelope.prototype.constructor = MessageEnvelope;\nObject.defineProperty(MessageEnvelope.prototype, 'isMessage', {value: true});\n\n\nfunction EventMessage(node, lane, body) {\n  MessageEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.body = body;\n}\nEventMessage.prototype = Object.create(MessageEnvelope.prototype);\nEventMessage.prototype.constructor = EventMessage;\nObject.defineProperty(EventMessage.prototype, 'isEventMessage', {value: true});\nEventMessage.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new EventMessage(node, lane, this.body);\n};\nEventMessage.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon.concat({'@event': headers}, this.body);\n};\nEventMessage.decode = function (record) {\n  var node, lane;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new EventMessage(node, lane, body);\n  }\n};\n\n\nfunction CommandMessage(node, lane, body) {\n  MessageEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.body = body;\n}\nCommandMessage.prototype = Object.create(MessageEnvelope.prototype);\nCommandMessage.prototype.constructor = CommandMessage;\nObject.defineProperty(CommandMessage.prototype, 'isCommandMessage', {value: true});\nCommandMessage.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new CommandMessage(node, lane, this.body);\n};\nCommandMessage.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon.concat({'@command': headers}, this.body);\n};\nCommandMessage.decode = function (record) {\n  var node, lane;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new CommandMessage(node, lane, body);\n  }\n};\n\n\nfunction LinkRequest(node, lane, prio, body) {\n  RequestEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.prio = prio || 0.0;\n  this.body = body;\n}\nLinkRequest.prototype = Object.create(RequestEnvelope.prototype);\nLinkRequest.prototype.constructor = LinkRequest;\nObject.defineProperty(LinkRequest.prototype, 'isLinkRequest', {value: true});\nLinkRequest.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new LinkRequest(node, lane, this.prio, this.body);\n};\nLinkRequest.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.prio) headers.push({prio: this.prio});\n  return recon.concat({'@link': headers}, this.body);\n};\nLinkRequest.decode = function (record) {\n  var node, lane, prio;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.prio !== undefined) prio = header.prio;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new LinkRequest(node, lane, prio, body);\n  }\n};\n\n\nfunction LinkedResponse(node, lane, prio, body) {\n  ResponseEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.prio = prio || 0.0;\n  this.body = body;\n}\nLinkedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nLinkedResponse.prototype.constructor = LinkedResponse;\nObject.defineProperty(LinkedResponse.prototype, 'isLinkedResponse', {value: true});\nLinkedResponse.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new LinkedResponse(node, lane, this.prio, this.body);\n};\nLinkedResponse.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.prio) headers.push({prio: this.prio});\n  return recon.concat({'@linked': headers}, this.body);\n};\nLinkedResponse.decode = function (record) {\n  var node, lane, prio;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.prio !== undefined) prio = header.prio;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new LinkedResponse(node, lane, prio, body);\n  }\n};\n\n\nfunction SyncRequest(node, lane, prio, body) {\n  RequestEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.prio = prio || 0.0;\n  this.body = body;\n}\nSyncRequest.prototype = Object.create(RequestEnvelope.prototype);\nSyncRequest.prototype.constructor = SyncRequest;\nObject.defineProperty(SyncRequest.prototype, 'isSyncRequest', {value: true});\nSyncRequest.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new SyncRequest(node, lane, this.prio, this.body);\n};\nSyncRequest.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.prio) headers.push({prio: this.prio});\n  return recon.concat({'@sync': headers}, this.body);\n};\nSyncRequest.decode = function (record) {\n  var node, lane, prio;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.prio !== undefined) prio = header.prio;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new SyncRequest(node, lane, prio, body);\n  }\n};\n\n\nfunction SyncedResponse(node, lane, body) {\n  ResponseEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.body = body;\n}\nSyncedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nSyncedResponse.prototype.constructor = SyncedResponse;\nObject.defineProperty(SyncedResponse.prototype, 'isSyncedResponse', {value: true});\nSyncedResponse.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new SyncedResponse(node, lane, this.body);\n};\nSyncedResponse.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon.concat({'@synced': headers}, this.body);\n};\nSyncedResponse.decode = function (record) {\n  var node, lane;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new SyncedResponse(node, lane, body);\n  }\n};\n\n\nfunction UnlinkRequest(node, lane, body) {\n  RequestEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.body = body;\n}\nUnlinkRequest.prototype = Object.create(RequestEnvelope.prototype);\nUnlinkRequest.prototype.constructor = UnlinkRequest;\nObject.defineProperty(UnlinkRequest.prototype, 'isUnlinkRequest', {value: true});\nUnlinkRequest.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new UnlinkRequest(node, lane, this.body);\n};\nUnlinkRequest.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon.concat({'@unlink': headers}, this.body);\n};\nUnlinkRequest.decode = function (record) {\n  var node, lane;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new UnlinkRequest(node, lane, body);\n  }\n};\n\n\nfunction UnlinkedResponse(node, lane, body) {\n  ResponseEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.body = body;\n}\nUnlinkedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nUnlinkedResponse.prototype.constructor = UnlinkedResponse;\nObject.defineProperty(UnlinkedResponse.prototype, 'isUnlinkedResponse', {value: true});\nUnlinkedResponse.prototype.withAddress = function (node, lane) {\n  if (node === undefined) node = this.node;\n  if (lane === undefined) lane = this.lane;\n  return new UnlinkedResponse(node, lane, this.body);\n};\nUnlinkedResponse.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon.concat({'@unlinked': headers}, this.body);\n};\nUnlinkedResponse.decode = function (record) {\n  var node, lane;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new UnlinkedResponse(node, lane, body);\n  }\n};\n\n\nfunction AuthRequest(body) {\n  RequestEnvelope.call(this);\n  this.body = body;\n}\nAuthRequest.prototype = Object.create(RequestEnvelope.prototype);\nAuthRequest.prototype.constructor = AuthRequest;\nObject.defineProperty(AuthRequest.prototype, 'isAuthRequest', {value: true});\nAuthRequest.prototype.encode = function () {\n  return recon.concat({'@auth': null}, this.body);\n};\nAuthRequest.decode = function (record) {\n  var body = recon.tail(record);\n  return new AuthRequest(body);\n};\n\n\nfunction AuthedResponse(body) {\n  ResponseEnvelope.call(this);\n  this.body = body;\n}\nAuthedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nAuthedResponse.prototype.constructor = AuthedResponse;\nObject.defineProperty(AuthedResponse.prototype, 'isAuthedResponse', {value: true});\nAuthedResponse.prototype.encode = function () {\n  return recon.concat({'@authed': null}, this.body);\n};\nAuthedResponse.decode = function (record) {\n  var body = recon.tail(record);\n  return new AuthedResponse(body);\n};\n\n\nfunction DeauthRequest(body) {\n  RequestEnvelope.call(this);\n  this.body = body;\n}\nDeauthRequest.prototype = Object.create(RequestEnvelope.prototype);\nDeauthRequest.prototype.constructor = DeauthRequest;\nObject.defineProperty(DeauthRequest.prototype, 'isDeauthRequest', {value: true});\nDeauthRequest.prototype.encode = function () {\n  return recon.concat({'@deauth': null}, this.body);\n};\nDeauthRequest.decode = function (record) {\n  var body = recon.tail(record);\n  return new DeauthRequest(body);\n};\n\n\nfunction DeauthedResponse(body) {\n  ResponseEnvelope.call(this);\n  this.body = body;\n}\nDeauthedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nDeauthedResponse.prototype.constructor = DeauthedResponse;\nObject.defineProperty(DeauthedResponse.prototype, 'isDeauthedResponse', {value: true});\nDeauthedResponse.prototype.encode = function () {\n  return recon.concat({'@deauthed': null}, this.body);\n};\nDeauthedResponse.decode = function (record) {\n  var body = recon.tail(record);\n  return new DeauthedResponse(body);\n};\n\n\nexports.decode = decode;\nexports.encode = encode;\nexports.parse = parse;\nexports.stringify = stringify;\nexports.Envelope = Envelope;\nexports.RequestEnvelope = RequestEnvelope;\nexports.ResponseEnvelope = ResponseEnvelope;\nexports.MessageEnvelope = MessageEnvelope;\nexports.EventMessage = EventMessage;\nexports.CommandMessage = CommandMessage;\nexports.SyncRequest = SyncRequest;\nexports.SyncedResponse = SyncedResponse;\nexports.LinkRequest = LinkRequest;\nexports.LinkedResponse = LinkedResponse;\nexports.UnlinkRequest = UnlinkRequest;\nexports.UnlinkedResponse = UnlinkedResponse;\nexports.AuthRequest = AuthRequest;\nexports.AuthedResponse = AuthedResponse;\nexports.DeauthRequest = DeauthRequest;\nexports.DeauthedResponse = DeauthedResponse;\nexports.config = config;\n"],"sourceRoot":"/source/"}