{"version":3,"sources":["node_modules/browser-pack/_prelude.js","config.json","swim-proto.min.js","swim-proto.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","swim","proto","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"version","swim-proto-js","decode","record","recon","tag","EventMessage","CommandMessage","SyncRequest","SyncedResponse","LinkRequest","LinkedResponse","UnlinkRequest","UnlinkedResponse","encode","envelope","parse","string","stringify","Envelope","RequestEnvelope","ResponseEnvelope","MessageEnvelope","node","lane","via","body","prio","config","Object","defineProperty","prototype","value","create","constructor","headers","push","concat","@event","tail","head","header","undefined","@command","@sync","@synced","@link","@linked","@unlink","@unlinked","./config.json","recon-js"],"mappings":"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","file":"swim-proto.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports={\"version\":\"0.3.0\"}","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}(g.swim || (g.swim = {})).proto = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports={\"version\":\"0.3.0\"}\n},{}],\"swim-proto-js\":[function(require,module,exports){\n'use strict';\n\nvar config = require('./config.json');\nvar recon = require('recon-js');\n\nfunction decode(record) {\n  switch (recon.tag(record)) {\n    case '@event': return EventMessage.decode(record);\n    case '@command': return CommandMessage.decode(record);\n    case '@sync': return SyncRequest.decode(record);\n    case '@synced': return SyncedResponse.decode(record);\n    case '@link': return LinkRequest.decode(record);\n    case '@linked': return LinkedResponse.decode(record);\n    case '@unlink': return UnlinkRequest.decode(record);\n    case '@unlinked': return UnlinkedResponse.decode(record);\n  }\n}\n\nfunction encode(envelope) {\n  return envelope.encode();\n}\n\nfunction parse(string) {\n  return decode(recon.parse(string));\n}\n\nfunction stringify(envelope) {\n  return recon.stringify(encode(envelope));\n}\n\n\nfunction Envelope() {}\nObject.defineProperty(Envelope.prototype, 'isRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isMessage', {value: false});\nObject.defineProperty(Envelope.prototype, 'isEventMessage', {value: false});\nObject.defineProperty(Envelope.prototype, 'isCommandMessage', {value: false});\nObject.defineProperty(Envelope.prototype, 'isSyncRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isSyncedResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isLinkRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isLinkedResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isUnlinkRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isUnlinkedResponse', {value: false});\n\n\nfunction RequestEnvelope() {\n  Envelope.call(this);\n}\nRequestEnvelope.prototype = Object.create(Envelope.prototype);\nRequestEnvelope.prototype.constructor = RequestEnvelope;\nObject.defineProperty(RequestEnvelope.prototype, 'isRequest', {value: true});\n\n\nfunction ResponseEnvelope() {\n  Envelope.call(this);\n}\nResponseEnvelope.prototype = Object.create(Envelope.prototype);\nResponseEnvelope.prototype.constructor = ResponseEnvelope;\nObject.defineProperty(RequestEnvelope.prototype, 'isResponse', {value: true});\n\n\nfunction MessageEnvelope() {\n  Envelope.call(this);\n}\nMessageEnvelope.prototype = Object.create(Envelope.prototype);\nMessageEnvelope.prototype.constructor = MessageEnvelope;\nObject.defineProperty(RequestEnvelope.prototype, 'isMessage', {value: true});\n\n\nfunction EventMessage(node, lane, via, body) {\n  MessageEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.via = via;\n  this.body = body;\n}\nEventMessage.prototype = Object.create(MessageEnvelope.prototype);\nEventMessage.prototype.constructor = EventMessage;\nObject.defineProperty(EventMessage.prototype, 'isEventMessage', {value: true});\nEventMessage.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.via) headers.push({via: this.via});\n  return recon.concat({'@event': headers}, this.body);\n};\nEventMessage.decode = function (record) {\n  var node, lane, via;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.via !== undefined) via = header.via;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n    else if (i === 2) via = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new EventMessage(node, lane, via, body);\n  }\n};\n\n\nfunction CommandMessage(node, lane, via, body) {\n  MessageEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.via = via;\n  this.body = body;\n}\nCommandMessage.prototype = Object.create(MessageEnvelope.prototype);\nCommandMessage.prototype.constructor = CommandMessage;\nObject.defineProperty(CommandMessage.prototype, 'isCommandMessage', {value: true});\nCommandMessage.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.via) headers.push({via: this.via});\n  return recon.concat({'@command': headers}, this.body);\n};\nCommandMessage.decode = function (record) {\n  var node, lane, via;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.via !== undefined) via = header.via;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n    else if (i === 2) via = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new CommandMessage(node, lane, via, body);\n  }\n};\n\n\nfunction SyncRequest(node, lane, prio) {\n  RequestEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.prio = prio || 0.0;\n}\nSyncRequest.prototype = Object.create(RequestEnvelope.prototype);\nSyncRequest.prototype.constructor = SyncRequest;\nObject.defineProperty(SyncRequest.prototype, 'isSyncRequest', {value: true});\nSyncRequest.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.prio) headers.push({prio: this.prio});\n  return recon({'@sync': headers});\n};\nSyncRequest.decode = function (record) {\n  var node, lane, prio;\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.prio !== undefined) prio = header.prio;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new SyncRequest(node, lane, prio);\n  }\n};\n\n\nfunction SyncedResponse(node, lane) {\n  ResponseEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n}\nSyncedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nSyncedResponse.prototype.constructor = SyncedResponse;\nObject.defineProperty(SyncedResponse.prototype, 'isSyncedResponse', {value: true});\nSyncedResponse.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon({'@synced': headers});\n};\nSyncedResponse.decode = function (record) {\n  var node, lane;\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new SyncedResponse(node, lane);\n  }\n};\n\n\nfunction LinkRequest(node, lane, prio) {\n  RequestEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.prio = prio || 0.0;\n}\nLinkRequest.prototype = Object.create(RequestEnvelope.prototype);\nLinkRequest.prototype.constructor = LinkRequest;\nObject.defineProperty(LinkRequest.prototype, 'isLinkRequest', {value: true});\nLinkRequest.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.prio) headers.push({prio: this.prio});\n  return recon({'@link': headers});\n};\nLinkRequest.decode = function (record) {\n  var node, lane, prio;\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.prio !== undefined) prio = header.prio;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new LinkRequest(node, lane, prio);\n  }\n};\n\n\nfunction LinkedResponse(node, lane, prio) {\n  ResponseEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.prio = prio || 0.0;\n}\nLinkedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nLinkedResponse.prototype.constructor = LinkedResponse;\nObject.defineProperty(LinkedResponse.prototype, 'isLinkedResponse', {value: true});\nLinkedResponse.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.prio) headers.push({prio: this.prio});\n  return recon({'@linked': headers});\n};\nLinkedResponse.decode = function (record) {\n  var node, lane, prio;\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.prio !== undefined) prio = header.prio;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new LinkedResponse(node, lane, prio);\n  }\n};\n\n\nfunction UnlinkRequest(node, lane) {\n  RequestEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n}\nUnlinkRequest.prototype = Object.create(RequestEnvelope.prototype);\nUnlinkRequest.prototype.constructor = UnlinkRequest;\nObject.defineProperty(UnlinkRequest.prototype, 'isUnlinkRequest', {value: true});\nUnlinkRequest.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon({'@unlink': headers});\n};\nUnlinkRequest.decode = function (record) {\n  var node, lane;\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new UnlinkRequest(node, lane);\n  }\n};\n\n\nfunction UnlinkedResponse(node, lane) {\n  ResponseEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n}\nUnlinkedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nUnlinkedResponse.prototype.constructor = UnlinkedResponse;\nObject.defineProperty(UnlinkedResponse.prototype, 'isUnlinkedResponse', {value: true});\nUnlinkedResponse.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon({'@unlinked': headers});\n};\nUnlinkedResponse.decode = function (record) {\n  var node, lane;\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new UnlinkedResponse(node, lane);\n  }\n};\n\n\nexports.decode = decode;\nexports.encode = encode;\nexports.parse = parse;\nexports.stringify = stringify;\nexports.Envelope = Envelope;\nexports.RequestEnvelope = RequestEnvelope;\nexports.ResponseEnvelope = ResponseEnvelope;\nexports.MessageEnvelope = MessageEnvelope;\nexports.EventMessage = EventMessage;\nexports.CommandMessage = CommandMessage;\nexports.SyncRequest = SyncRequest;\nexports.SyncedResponse = SyncedResponse;\nexports.LinkRequest = LinkRequest;\nexports.LinkedResponse = LinkedResponse;\nexports.UnlinkRequest = UnlinkRequest;\nexports.UnlinkedResponse = UnlinkedResponse;\nexports.config = config;\n\n},{\"./config.json\":1,\"recon-js\":\"recon-js\"}]},{},[])(\"swim-proto-js\")\n});\n\n","'use strict';\n\nvar config = require('./config.json');\nvar recon = require('recon-js');\n\nfunction decode(record) {\n  switch (recon.tag(record)) {\n    case '@event': return EventMessage.decode(record);\n    case '@command': return CommandMessage.decode(record);\n    case '@sync': return SyncRequest.decode(record);\n    case '@synced': return SyncedResponse.decode(record);\n    case '@link': return LinkRequest.decode(record);\n    case '@linked': return LinkedResponse.decode(record);\n    case '@unlink': return UnlinkRequest.decode(record);\n    case '@unlinked': return UnlinkedResponse.decode(record);\n  }\n}\n\nfunction encode(envelope) {\n  return envelope.encode();\n}\n\nfunction parse(string) {\n  return decode(recon.parse(string));\n}\n\nfunction stringify(envelope) {\n  return recon.stringify(encode(envelope));\n}\n\n\nfunction Envelope() {}\nObject.defineProperty(Envelope.prototype, 'isRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isMessage', {value: false});\nObject.defineProperty(Envelope.prototype, 'isEventMessage', {value: false});\nObject.defineProperty(Envelope.prototype, 'isCommandMessage', {value: false});\nObject.defineProperty(Envelope.prototype, 'isSyncRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isSyncedResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isLinkRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isLinkedResponse', {value: false});\nObject.defineProperty(Envelope.prototype, 'isUnlinkRequest', {value: false});\nObject.defineProperty(Envelope.prototype, 'isUnlinkedResponse', {value: false});\n\n\nfunction RequestEnvelope() {\n  Envelope.call(this);\n}\nRequestEnvelope.prototype = Object.create(Envelope.prototype);\nRequestEnvelope.prototype.constructor = RequestEnvelope;\nObject.defineProperty(RequestEnvelope.prototype, 'isRequest', {value: true});\n\n\nfunction ResponseEnvelope() {\n  Envelope.call(this);\n}\nResponseEnvelope.prototype = Object.create(Envelope.prototype);\nResponseEnvelope.prototype.constructor = ResponseEnvelope;\nObject.defineProperty(RequestEnvelope.prototype, 'isResponse', {value: true});\n\n\nfunction MessageEnvelope() {\n  Envelope.call(this);\n}\nMessageEnvelope.prototype = Object.create(Envelope.prototype);\nMessageEnvelope.prototype.constructor = MessageEnvelope;\nObject.defineProperty(RequestEnvelope.prototype, 'isMessage', {value: true});\n\n\nfunction EventMessage(node, lane, via, body) {\n  MessageEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.via = via;\n  this.body = body;\n}\nEventMessage.prototype = Object.create(MessageEnvelope.prototype);\nEventMessage.prototype.constructor = EventMessage;\nObject.defineProperty(EventMessage.prototype, 'isEventMessage', {value: true});\nEventMessage.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.via) headers.push({via: this.via});\n  return recon.concat({'@event': headers}, this.body);\n};\nEventMessage.decode = function (record) {\n  var node, lane, via;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.via !== undefined) via = header.via;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n    else if (i === 2) via = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new EventMessage(node, lane, via, body);\n  }\n};\n\n\nfunction CommandMessage(node, lane, via, body) {\n  MessageEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.via = via;\n  this.body = body;\n}\nCommandMessage.prototype = Object.create(MessageEnvelope.prototype);\nCommandMessage.prototype.constructor = CommandMessage;\nObject.defineProperty(CommandMessage.prototype, 'isCommandMessage', {value: true});\nCommandMessage.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.via) headers.push({via: this.via});\n  return recon.concat({'@command': headers}, this.body);\n};\nCommandMessage.decode = function (record) {\n  var node, lane, via;\n  var body = recon.tail(record);\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.via !== undefined) via = header.via;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n    else if (i === 2) via = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new CommandMessage(node, lane, via, body);\n  }\n};\n\n\nfunction SyncRequest(node, lane, prio) {\n  RequestEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.prio = prio || 0.0;\n}\nSyncRequest.prototype = Object.create(RequestEnvelope.prototype);\nSyncRequest.prototype.constructor = SyncRequest;\nObject.defineProperty(SyncRequest.prototype, 'isSyncRequest', {value: true});\nSyncRequest.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.prio) headers.push({prio: this.prio});\n  return recon({'@sync': headers});\n};\nSyncRequest.decode = function (record) {\n  var node, lane, prio;\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.prio !== undefined) prio = header.prio;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new SyncRequest(node, lane, prio);\n  }\n};\n\n\nfunction SyncedResponse(node, lane) {\n  ResponseEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n}\nSyncedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nSyncedResponse.prototype.constructor = SyncedResponse;\nObject.defineProperty(SyncedResponse.prototype, 'isSyncedResponse', {value: true});\nSyncedResponse.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon({'@synced': headers});\n};\nSyncedResponse.decode = function (record) {\n  var node, lane;\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new SyncedResponse(node, lane);\n  }\n};\n\n\nfunction LinkRequest(node, lane, prio) {\n  RequestEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.prio = prio || 0.0;\n}\nLinkRequest.prototype = Object.create(RequestEnvelope.prototype);\nLinkRequest.prototype.constructor = LinkRequest;\nObject.defineProperty(LinkRequest.prototype, 'isLinkRequest', {value: true});\nLinkRequest.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.prio) headers.push({prio: this.prio});\n  return recon({'@link': headers});\n};\nLinkRequest.decode = function (record) {\n  var node, lane, prio;\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.prio !== undefined) prio = header.prio;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new LinkRequest(node, lane, prio);\n  }\n};\n\n\nfunction LinkedResponse(node, lane, prio) {\n  ResponseEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n  this.prio = prio || 0.0;\n}\nLinkedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nLinkedResponse.prototype.constructor = LinkedResponse;\nObject.defineProperty(LinkedResponse.prototype, 'isLinkedResponse', {value: true});\nLinkedResponse.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  if (this.prio) headers.push({prio: this.prio});\n  return recon({'@linked': headers});\n};\nLinkedResponse.decode = function (record) {\n  var node, lane, prio;\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (header.prio !== undefined) prio = header.prio;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new LinkedResponse(node, lane, prio);\n  }\n};\n\n\nfunction UnlinkRequest(node, lane) {\n  RequestEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n}\nUnlinkRequest.prototype = Object.create(RequestEnvelope.prototype);\nUnlinkRequest.prototype.constructor = UnlinkRequest;\nObject.defineProperty(UnlinkRequest.prototype, 'isUnlinkRequest', {value: true});\nUnlinkRequest.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon({'@unlink': headers});\n};\nUnlinkRequest.decode = function (record) {\n  var node, lane;\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new UnlinkRequest(node, lane);\n  }\n};\n\n\nfunction UnlinkedResponse(node, lane) {\n  ResponseEnvelope.call(this);\n  this.node = node;\n  this.lane = lane;\n}\nUnlinkedResponse.prototype = Object.create(ResponseEnvelope.prototype);\nUnlinkedResponse.prototype.constructor = UnlinkedResponse;\nObject.defineProperty(UnlinkedResponse.prototype, 'isUnlinkedResponse', {value: true});\nUnlinkedResponse.prototype.encode = function () {\n  var headers = [{node: this.node}, {lane: this.lane}];\n  return recon({'@unlinked': headers});\n};\nUnlinkedResponse.decode = function (record) {\n  var node, lane;\n  var headers = recon.head(record);\n  var n = headers && headers.length || 0;\n  for (var i = 0; i < n; i += 1) {\n    var header = headers[i];\n    if (header.node !== undefined) node = header.node;\n    else if (header.lane !== undefined) lane = header.lane;\n    else if (i === 0) node = header;\n    else if (i === 1) lane = header;\n  }\n  if (node !== undefined && lane !== undefined) {\n    return new UnlinkedResponse(node, lane);\n  }\n};\n\n\nexports.decode = decode;\nexports.encode = encode;\nexports.parse = parse;\nexports.stringify = stringify;\nexports.Envelope = Envelope;\nexports.RequestEnvelope = RequestEnvelope;\nexports.ResponseEnvelope = ResponseEnvelope;\nexports.MessageEnvelope = MessageEnvelope;\nexports.EventMessage = EventMessage;\nexports.CommandMessage = CommandMessage;\nexports.SyncRequest = SyncRequest;\nexports.SyncedResponse = SyncedResponse;\nexports.LinkRequest = LinkRequest;\nexports.LinkedResponse = LinkedResponse;\nexports.UnlinkRequest = UnlinkRequest;\nexports.UnlinkedResponse = UnlinkedResponse;\nexports.config = config;\n"],"sourceRoot":"/source/"}